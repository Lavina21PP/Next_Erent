"use client";
import React, { useState, useRef, useEffect } from "react";
import {
  Menu,
  X, // ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô X ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á
  Home,
  User,
  Settings,
  Bell,
  Search,
  ChevronDown,
  LucideIcon, // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ LucideIcon ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô Type ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö icon
} from "lucide-react";
import { useLogout } from "@/lib/logout";
import { useRouter, usePathname } from "next/navigation"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ usePathname
import { useMessage } from "../context/MessageContext";
import { useRole } from "../context/RoleContext";
import Spinner from "../ui/spinner";
import { useNotification } from "../context/NotificationContext";
import { toast } from "sonner";

const setFlash = (key: string, value: string) => {
  sessionStorage.setItem(key, value);
};

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Type ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Navigation Item ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ 'any[]'
interface NavigationItem {
  name: string;
  icon: LucideIcon; // ‡πÉ‡∏ä‡πâ LucideIcon ‡πÄ‡∏õ‡πá‡∏ô Type ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö icon component
  href: string;
  current: boolean; // ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏≤ current ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÅ‡∏ö‡∏ö dynamic
}

type AppBarLayoutProps = {
  children: React.ReactNode; // ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® prop children
};

const AppBarLayout: React.FC<AppBarLayoutProps> = ({ children }) => {
  const { role, first_name, last_name, isLoading, email_phone } = useRole(); // ‡∏î‡∏∂‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å Context
  const router = useRouter();
  const pathname = usePathname(); // ‡∏î‡∏∂‡∏á path ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  const logout = useLogout();
  const { showMessage } = useMessage();
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [profileDropdown, setProfileDropdown] = useState(false);

  const { notifications } = useNotification();
  const lastNotifications = notifications[notifications.length - 1];
  useEffect(() => {
    if (notifications.length > 0) {
      console.log(notifications);
      const id = toast.success(
        `${lastNotifications?.detail_sender.email_phone}`,
        {
          description: `${lastNotifications?.content}`,
          // ‡∏õ‡∏∏‡πà‡∏° ‚ùå
          action: {
            label: "View",
            onClick: () => {
              setFlash(
                "conversation_id",
                lastNotifications?.conversation_id.toString()
              );
              router.push(
                `/${
                  role === "Landlord"
                    ? "landlord"
                    : role === "Tenant" && "tenant"
                }/message`
              );
            },
          },
          // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà Toast ‡πÄ‡∏≠‡∏á
          icon: "üì©",
          closeButton: true,
        }
      );
      // showMessage("success", notifications[notifications.length - 1]?.content);
    }
  }, [notifications]);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á refs ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° dropdown ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ dropdown
  const dropdownRef = useRef<HTMLDivElement>(null);
  const dropdownButtonRef = useRef<HTMLButtonElement>(null);

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó
  // ‡∏Ñ‡πà‡∏≤ current ‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏õ‡πá‡∏ô false ‡πÉ‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡∏°‡πà dynamic
  const tenantNavigationItems: NavigationItem[] = [
    {
      name: "Properties",
      icon: Home,
      href: "/tenant/properties",
      current: false,
    },
    { name: "Message", icon: User, href: "/tenant/message", current: false },
    {
      name: "Notifications",
      icon: Bell,
      href: "/tenant/notifications",
      current: false,
    },
  ];

  const landlordNavigationItems: NavigationItem[] = [
    {
      name: "MyProperties",
      icon: Home,
      href: "/landlord/myproperties",
      current: false,
    },
    { name: "Message", icon: User, href: "/landlord/message", current: false },
    {
      name: "Notifications",
      icon: Bell,
      href: "/landlord/notifications",
      current: false,
    },
  ];

  const adminNavigationItems: NavigationItem[] = [
    { name: "Dashboard", icon: Home, href: "/admin/dashboard", current: false },
    { name: "Users", icon: User, href: "/admin/users", current: false },
    { name: "Reports", icon: Bell, href: "/admin/reports", current: false },
    {
      name: "Settings",
      icon: Settings,
      href: "/admin/settings",
      current: false,
    },
  ];

  // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
  let baseNavigationItems: NavigationItem[];
  switch (role) {
    case "Tenant":
      baseNavigationItems = tenantNavigationItems;
      break;
    case "Landlord":
      baseNavigationItems = landlordNavigationItems;
      break;
    case "Admin":
      baseNavigationItems = adminNavigationItems;
      break;
    default:
      baseNavigationItems = [];
      break;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á navigationItems ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ current ‡πÅ‡∏ö‡∏ö dynamic
  const navigationItems = baseNavigationItems.map((item) => ({
    ...item,
    current: pathname === item.href, // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ path ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö href ‡∏Ç‡∏≠‡∏á item ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  }));

  const toggleSidebar = () => {
    setSidebarOpen(!sidebarOpen);
  };

  // Effect ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å dropdown ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      // ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ dropdown ‡πÅ‡∏•‡∏∞‡∏ô‡∏≠‡∏Å‡∏õ‡∏∏‡πà‡∏° dropdown ‡πÉ‡∏´‡πâ‡∏õ‡∏¥‡∏î dropdown
      if (
        dropdownRef.current &&
        !dropdownRef.current.contains(event.target as Node) &&
        dropdownButtonRef.current &&
        !dropdownButtonRef.current.contains(event.target as Node)
      ) {
        setProfileDropdown(false);
      }
    };

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÄ‡∏°‡∏∑‡πà‡∏≠ dropdown ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    if (profileDropdown) {
      document.addEventListener("mousedown", handleClickOutside);
    } else {
      // ‡∏•‡∏ö event listener ‡πÄ‡∏°‡∏∑‡πà‡∏≠ dropdown ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
      document.removeEventListener("mousedown", handleClickOutside);
    }

    // Cleanup: ‡∏•‡∏ö event listener ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡∏ñ‡∏π‡∏Å‡∏ñ‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [profileDropdown]); // ‡∏£‡∏±‡∏ô effect ‡∏ã‡πâ‡∏≥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ profileDropdown ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á

  if (isLoading) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        {" "}
        {/* ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏•‡∏≤‡∏™‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á */}
        <Spinner />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* ‡πÇ‡∏≠‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏•‡∏¢‡πå‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */}
      {sidebarOpen && (
        <div
          className="fixed inset-0 z-20 bg-black/50 bg-opacity-50 lg:hidden"
          onClick={toggleSidebar}
        />
      )}
      {/* ‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á */}
      <div
        className={`
          fixed inset-y-0 left-0 z-30 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out
          ${
            sidebarOpen ? "translate-x-0" : "-translate-x-full"
          } lg:translate-x-0 rounded-r-lg
        `}
      >
        <div className="flex items-center justify-between h-16 px-6 border-b border-gray-200">
          <div className="flex items-center">
            <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
              <span className="text-white font-bold">A</span>
            </div>
            <span className="ml-3 text-xl font-semibold text-gray-900">
              {role} {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
            </span>
          </div>
          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å */}
          <button
            className="lg:hidden p-2 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-0"
            onClick={toggleSidebar}
          >
            <X className="w-6 h-6 text-gray-400" />
          </button>
        </div>

        <nav className="mt-6 px-3">
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó */}
          {navigationItems.map((item) => (
            <a
              key={item.name}
              href={item.href}
              className={`
                flex items-center px-3 py-2 mb-2 text-sm font-medium rounded-lg transition-colors duration-150 focus:outline-none focus:ring-0
                ${
                  item.current
                    ? "bg-blue-100 text-blue-800 border-l-4 border-blue-600" // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡πÑ‡∏ï‡∏•‡πå active ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
                    : "text-gray-600 hover:bg-gray-50 hover:text-gray-900"
                }
              `}
            >
              <item.icon
                className={`w-5 h-5 mr-3 ${
                  item.current ? "text-blue-600" : "text-gray-400"
                }`}
              />
              {item.name}
            </a>
          ))}
        </nav>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á */}
        <div className="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200 bg-white">
          <div className="flex items-center">
            <div className="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center">
              <User className="w-6 h-6 text-gray-600" />
            </div>
            <div className="ml-3">
              <p className="text-sm font-medium text-gray-900">
                {first_name} {last_name}
              </p>
              <p className="text-xs text-gray-500">{email_phone}</p>
            </div>
          </div>
        </div>
      </div>
      {/* ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å */}
      <div className="lg:pl-64">
        {/* ‡πÅ‡∏ñ‡∏ö‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */}
        <header className="bg-white shadow-md border-b border-gray-200 sticky top-0 z-10">
          <div className="flex items-center justify-between h-16 px-6">
            {/* ‡∏î‡πâ‡∏≤‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ - ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */}
            <div className="flex items-center">
              <button
                className="lg:hidden mr-4 p-2 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-0"
                onClick={toggleSidebar}
              >
                <Menu className="w-6 h-6 text-gray-600" />
              </button>
            </div>

            {/* ‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤ - ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
            <div className="flex items-center space-x-4">
              {/* dropdown ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
              <div className="relative">
                <button
                  ref={dropdownButtonRef} // ‡πÅ‡∏ô‡∏ö ref ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
                  className="flex items-center text-sm rounded-full focus:outline-none focus:ring-0 focus:ring-offset-0 p-1.5 hover:bg-gray-100 transition-colors duration-150"
                  onClick={() => setProfileDropdown(!profileDropdown)}
                >
                  <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                    <User className="w-5 h-5 text-blue-600" />
                  </div>
                  <span className="ml-2 text-gray-800 font-medium hidden md:block">
                    {first_name} {last_name}
                  </span>
                  <ChevronDown
                    className={`ml-1 w-4 h-4 text-gray-500 hidden md:block transition-transform duration-200 ${
                      profileDropdown ? "rotate-180" : "rotate-0"
                    }`}
                  />
                </button>

                {profileDropdown && (
                  <div
                    ref={dropdownRef} // ‡πÅ‡∏ô‡∏ö ref ‡∏Å‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ dropdown
                    className="absolute right-0 mt-2 w-48 rounded-lg shadow-xl bg-white ring-1 ring-black ring-opacity-5 p-1 animate-fade-in-down"
                    style={{ transformOrigin: "top right" }}
                  >
                    <div className="py-1">
                      <a
                        href="#"
                        className="block px-4 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-700 rounded-md transition-colors duration-150 focus:outline-none focus:ring-0"
                      >
                        Your Profile
                      </a>
                      <a
                        href="#"
                        className="block px-4 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-700 rounded-md transition-colors duration-150 focus:outline-none focus:ring-0"
                      >
                        Settings
                      </a>
                      <div
                        onClick={logout}
                        className="block px-4 py-2 text-sm text-red-700 hover:bg-red-50 rounded-md transition-colors duration-150 focus:outline-none focus:ring-0"
                      >
                        Sign out
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>
        </header>

        {/* ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏ô‡πâ‡∏≤ */}
        <main className="">
          <div className="">{children}</div>
        </main>
      </div>
      {/* Tailwind CSS keyframes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô fade-in-down */}
      <style jsx>{`
        @keyframes fade-in-down {
          from {
            opacity: 0;
            transform: translateY(-10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        .animate-fade-in-down {
          animation: fade-in-down 0.2s ease-out;
        }
      `}</style>
    </div>
  );
};

export default AppBarLayout;
